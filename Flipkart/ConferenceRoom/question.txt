# Flipkart Question: Conference Room Management System

Medium Link: https://bucky21.medium.com/how-i-cracked-the-machine-coding-round-of-flipkart-deb4c1a2a404

One of the core problems which people face at every company is the unavailability of conference rooms.
So we thought of building one conference room management system. The system should have the following features.

## Assumptions

- Conference rooms are scattered across multiple buildings and multiple floors, and each floor can have
  multiple conference rooms, but each conference room should be uniquely identifiable.
- Booking will be done for slots in hours. Hours will be taken in 24-hour format, e.g., Book from 1 am
  to 3 am {1:3}, from 12 pm to 1 pm {12:13}.
- Each conference room can be booked given that no one has already booked for that slot.
- The system will be used only by one user only.
- Booking can be done for 1 day only.

## Features

- Users should be able to list down all the conference rooms available in any building.
  E.g., Alpha building has conference rooms with names: a1, a2, a3, a4, etc.
- User should be able to find suitable rooms to book for a given slot.
- User should be able to cancel existing booking and rooms should be free to be booked again
  for that slot.
- List down all the bookings made by the current user.

## Commands

```plaintext
ADD BUILDING <building_name>
E.g., ADD BUILDING flipkart1
Output: Added building flipkart1 into the system.

ADD FLOOR <buildingName> <floorName>
E.g., ADD FLOOR FLIPKART1 FirstFloor

ADD CONFROOM <buildingName> <floorName> <conferenceRoomID>
E.g., ADD CONFROOM flipkart1 firstfloor c1
The above commands add c1 conference room in firstfloor of building flipkart1
Output: Added conference room c1 on firstfloor in flipkart1

BOOK <SLOT> <BUILDING> <FLOOR>
Books the given Conference room for a given slot, on the given floor of the building.
E.g., BOOK 1:5 FLIPKART1 SEVENTH C1

CANCEL <SLOT> <BUILDING> <FLOOR> <ROOM ID>
Cancels the slot booked for the floor in a given building.

LIST BOOKING <BUILDING> <FLOOR>
Should list down all the bookings made by the current user
Output format: <SLOT> <FLOOR> <BUILDING> <roomName>
E.g.,
2:6 THIRDFLOOR FLIPKART1 c1
6:10 THIRDFLOOR FLIPKART1 c2

SEARCH <SlotName> <BuildingName> <FloorName>
Search should return possible available rooms for given parameters.
E.g., SEARCH 2:3 flipkart3 seventhFloor -> Search conf rooms available for booking from 2->3 in flipkart3 building and seventhFloor floor
If no room is available for booking for given slot, search will return “No Rooms available”

SUGGEST <SlotName>
The suggest command will return the next 3 suggestions for available slots.
E.g., SUGGEST 3:10
```

## Bonus Functionality

Existing search will return empty results if no rooms are available for a given slot.
Users want a suggestion functionality using which users can get a list of possible future slots
[Size limit to 3] which can be booked.

Expectation:

- Code should be Demoable and functionally complete.
- Code should fail gracefully with a proper error message for corner/invalid cases.
- Code should be modular, try thinking in terms of Object-Oriented Design.
- Input can be taken from the command line or in the main function

.
- Do not use any database or NoSQL store, use in-memory data structure.
- Do not create any UI for the application.
- Write a driver class for demo purposes. Which will execute all the commands in one place.
- Please prioritize code compilation, execution, and completion.
- Work on the expected output first and then only work on bonus features.

Feel free to customize and modify the format to suit your needs.

